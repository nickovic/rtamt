# Generated from rtamt/antlr/grammar/tl/StlLexer.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,75,746,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,
        3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,
        1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,
        1,16,1,16,1,16,1,17,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,19,1,19,
        1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,22,1,23,1,23,1,23,1,24,
        1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,
        1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,
        1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,
        1,29,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,32,
        1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,34,
        1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,
        1,39,1,39,3,39,372,8,39,1,40,1,40,1,40,3,40,377,8,40,1,41,1,41,1,
        41,1,41,3,41,383,8,41,1,42,1,42,1,42,1,42,1,42,1,42,3,42,391,8,42,
        1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,43,3,43,402,8,43,1,44,
        1,44,1,44,1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,
        1,47,1,47,1,47,1,47,1,47,1,47,1,47,3,47,425,8,47,1,48,1,48,1,48,
        1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,3,48,438,8,48,1,49,1,49,
        1,49,1,49,1,49,1,49,3,49,446,8,49,1,50,1,50,1,50,1,50,1,50,1,50,
        1,50,3,50,455,8,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,
        1,51,1,51,1,51,1,51,3,51,470,8,51,1,52,1,52,1,52,1,52,1,52,3,52,
        477,8,52,1,53,1,53,1,53,1,53,1,53,1,53,3,53,485,8,53,1,54,1,54,1,
        54,1,54,1,54,3,54,492,8,54,1,55,1,55,1,55,1,55,1,55,3,55,499,8,55,
        1,56,1,56,1,56,1,56,1,56,1,56,1,56,1,56,3,56,509,8,56,1,57,1,57,
        1,57,1,57,1,57,1,57,1,57,1,57,3,57,519,8,57,1,58,1,58,1,58,1,59,
        1,59,1,59,1,59,1,60,1,60,1,60,1,61,1,61,1,61,1,62,1,62,1,63,1,63,
        1,64,1,64,1,65,1,65,3,65,542,8,65,1,66,1,66,1,66,1,66,1,66,1,66,
        1,66,1,66,3,66,552,8,66,1,67,1,67,1,67,1,67,1,67,1,67,1,67,1,67,
        1,67,1,67,3,67,564,8,67,1,68,1,68,1,68,3,68,569,8,68,1,69,1,69,1,
        69,3,69,574,8,69,1,69,1,69,1,69,3,69,579,8,69,3,69,581,8,69,1,70,
        1,70,3,70,585,8,70,1,70,3,70,588,8,70,1,71,1,71,3,71,592,8,71,1,
        72,1,72,1,73,4,73,597,8,73,11,73,12,73,598,1,74,1,74,3,74,603,8,
        74,1,75,4,75,606,8,75,11,75,12,75,607,1,76,1,76,1,76,1,76,1,77,1,
        77,3,77,616,8,77,1,77,3,77,619,8,77,1,78,1,78,1,79,4,79,624,8,79,
        11,79,12,79,625,1,80,1,80,3,80,630,8,80,1,81,1,81,1,81,1,81,1,82,
        1,82,3,82,638,8,82,1,82,3,82,641,8,82,1,83,1,83,1,84,4,84,646,8,
        84,11,84,12,84,647,1,85,1,85,3,85,652,8,85,1,86,1,86,1,87,1,87,1,
        87,3,87,659,8,87,1,87,3,87,662,8,87,1,87,1,87,1,87,3,87,667,8,87,
        1,87,1,87,1,87,3,87,672,8,87,1,88,1,88,1,88,1,89,1,89,1,90,3,90,
        680,8,90,1,90,4,90,683,8,90,11,90,12,90,684,1,91,1,91,1,92,1,92,
        5,92,691,8,92,10,92,12,92,694,9,92,1,93,1,93,3,93,698,8,93,1,94,
        1,94,1,94,3,94,703,8,94,1,95,1,95,3,95,707,8,95,1,96,1,96,1,97,1,
        97,1,97,1,97,1,98,4,98,716,8,98,11,98,12,98,717,1,98,1,98,1,99,1,
        99,1,99,1,99,5,99,726,8,99,10,99,12,99,729,9,99,1,99,1,99,1,99,1,
        99,1,99,1,100,1,100,1,100,1,100,5,100,740,8,100,10,100,12,100,743,
        9,100,1,100,1,100,1,727,0,101,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
        17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,
        39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,
        61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,
        83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
        52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,
        123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,0,141,
        0,143,0,145,0,147,0,149,0,151,0,153,0,155,0,157,0,159,0,161,0,163,
        0,165,0,167,0,169,0,171,0,173,70,175,0,177,0,179,0,181,0,183,0,185,
        71,187,0,189,0,191,0,193,0,195,72,197,73,199,74,201,75,1,0,11,1,
        0,49,57,2,0,88,88,120,120,3,0,48,57,65,70,97,102,2,0,66,66,98,98,
        1,0,48,49,2,0,69,69,101,101,2,0,43,43,45,45,2,0,65,90,97,122,1,0,
        10,10,3,0,9,9,12,13,32,32,2,0,10,10,13,13,772,0,1,1,0,0,0,0,3,1,
        0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,
        0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,
        0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,
        0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,
        0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,
        0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,
        0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,
        0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,
        0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,
        0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,
        0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,
        113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,
        0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
        1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,173,1,0,0,0,
        0,185,1,0,0,0,0,195,1,0,0,0,0,197,1,0,0,0,0,199,1,0,0,0,0,201,1,
        0,0,0,1,203,1,0,0,0,3,205,1,0,0,0,5,207,1,0,0,0,7,209,1,0,0,0,9,
        211,1,0,0,0,11,213,1,0,0,0,13,215,1,0,0,0,15,217,1,0,0,0,17,219,
        1,0,0,0,19,221,1,0,0,0,21,223,1,0,0,0,23,225,1,0,0,0,25,227,1,0,
        0,0,27,229,1,0,0,0,29,231,1,0,0,0,31,233,1,0,0,0,33,237,1,0,0,0,
        35,242,1,0,0,0,37,246,1,0,0,0,39,250,1,0,0,0,41,252,1,0,0,0,43,255,
        1,0,0,0,45,258,1,0,0,0,47,261,1,0,0,0,49,264,1,0,0,0,51,270,1,0,
        0,0,53,277,1,0,0,0,55,283,1,0,0,0,57,290,1,0,0,0,59,299,1,0,0,0,
        61,305,1,0,0,0,63,310,1,0,0,0,65,316,1,0,0,0,67,321,1,0,0,0,69,329,
        1,0,0,0,71,333,1,0,0,0,73,338,1,0,0,0,75,348,1,0,0,0,77,362,1,0,
        0,0,79,371,1,0,0,0,81,376,1,0,0,0,83,382,1,0,0,0,85,390,1,0,0,0,
        87,401,1,0,0,0,89,403,1,0,0,0,91,407,1,0,0,0,93,412,1,0,0,0,95,424,
        1,0,0,0,97,437,1,0,0,0,99,445,1,0,0,0,101,454,1,0,0,0,103,469,1,
        0,0,0,105,476,1,0,0,0,107,484,1,0,0,0,109,491,1,0,0,0,111,498,1,
        0,0,0,113,508,1,0,0,0,115,518,1,0,0,0,117,520,1,0,0,0,119,523,1,
        0,0,0,121,527,1,0,0,0,123,530,1,0,0,0,125,533,1,0,0,0,127,535,1,
        0,0,0,129,537,1,0,0,0,131,541,1,0,0,0,133,551,1,0,0,0,135,563,1,
        0,0,0,137,568,1,0,0,0,139,580,1,0,0,0,141,582,1,0,0,0,143,591,1,
        0,0,0,145,593,1,0,0,0,147,596,1,0,0,0,149,602,1,0,0,0,151,605,1,
        0,0,0,153,609,1,0,0,0,155,613,1,0,0,0,157,620,1,0,0,0,159,623,1,
        0,0,0,161,629,1,0,0,0,163,631,1,0,0,0,165,635,1,0,0,0,167,642,1,
        0,0,0,169,645,1,0,0,0,171,651,1,0,0,0,173,653,1,0,0,0,175,671,1,
        0,0,0,177,673,1,0,0,0,179,676,1,0,0,0,181,679,1,0,0,0,183,686,1,
        0,0,0,185,688,1,0,0,0,187,697,1,0,0,0,189,702,1,0,0,0,191,706,1,
        0,0,0,193,708,1,0,0,0,195,710,1,0,0,0,197,715,1,0,0,0,199,721,1,
        0,0,0,201,735,1,0,0,0,203,204,5,45,0,0,204,2,1,0,0,0,205,206,5,43,
        0,0,206,4,1,0,0,0,207,208,5,42,0,0,208,6,1,0,0,0,209,210,5,47,0,
        0,210,8,1,0,0,0,211,212,5,40,0,0,212,10,1,0,0,0,213,214,5,41,0,0,
        214,12,1,0,0,0,215,216,5,123,0,0,216,14,1,0,0,0,217,218,5,125,0,
        0,218,16,1,0,0,0,219,220,5,91,0,0,220,18,1,0,0,0,221,222,5,93,0,
        0,222,20,1,0,0,0,223,224,5,59,0,0,224,22,1,0,0,0,225,226,5,58,0,
        0,226,24,1,0,0,0,227,228,5,44,0,0,228,26,1,0,0,0,229,230,5,46,0,
        0,230,28,1,0,0,0,231,232,5,64,0,0,232,30,1,0,0,0,233,234,5,97,0,
        0,234,235,5,98,0,0,235,236,5,115,0,0,236,32,1,0,0,0,237,238,5,115,
        0,0,238,239,5,113,0,0,239,240,5,114,0,0,240,241,5,116,0,0,241,34,
        1,0,0,0,242,243,5,101,0,0,243,244,5,120,0,0,244,245,5,112,0,0,245,
        36,1,0,0,0,246,247,5,112,0,0,247,248,5,111,0,0,248,249,5,119,0,0,
        249,38,1,0,0,0,250,251,5,115,0,0,251,40,1,0,0,0,252,253,5,109,0,
        0,253,254,5,115,0,0,254,42,1,0,0,0,255,256,5,117,0,0,256,257,5,115,
        0,0,257,44,1,0,0,0,258,259,5,110,0,0,259,260,5,115,0,0,260,46,1,
        0,0,0,261,262,5,112,0,0,262,263,5,115,0,0,263,48,1,0,0,0,264,265,
        5,116,0,0,265,266,5,111,0,0,266,267,5,112,0,0,267,268,5,105,0,0,
        268,269,5,99,0,0,269,50,1,0,0,0,270,271,5,105,0,0,271,272,5,109,
        0,0,272,273,5,112,0,0,273,274,5,111,0,0,274,275,5,114,0,0,275,276,
        5,116,0,0,276,52,1,0,0,0,277,278,5,105,0,0,278,279,5,110,0,0,279,
        280,5,112,0,0,280,281,5,117,0,0,281,282,5,116,0,0,282,54,1,0,0,0,
        283,284,5,111,0,0,284,285,5,117,0,0,285,286,5,116,0,0,286,287,5,
        112,0,0,287,288,5,117,0,0,288,289,5,116,0,0,289,56,1,0,0,0,290,291,
        5,105,0,0,291,292,5,110,0,0,292,293,5,116,0,0,293,294,5,101,0,0,
        294,295,5,114,0,0,295,296,5,110,0,0,296,297,5,97,0,0,297,298,5,108,
        0,0,298,58,1,0,0,0,299,300,5,99,0,0,300,301,5,111,0,0,301,302,5,
        110,0,0,302,303,5,115,0,0,303,304,5,116,0,0,304,60,1,0,0,0,305,306,
        5,114,0,0,306,307,5,101,0,0,307,308,5,97,0,0,308,309,5,108,0,0,309,
        62,1,0,0,0,310,311,5,102,0,0,311,312,5,108,0,0,312,313,5,111,0,0,
        313,314,5,97,0,0,314,315,5,116,0,0,315,64,1,0,0,0,316,317,5,108,
        0,0,317,318,5,111,0,0,318,319,5,110,0,0,319,320,5,103,0,0,320,66,
        1,0,0,0,321,322,5,99,0,0,322,323,5,111,0,0,323,324,5,109,0,0,324,
        325,5,112,0,0,325,326,5,108,0,0,326,327,5,101,0,0,327,328,5,120,
        0,0,328,68,1,0,0,0,329,330,5,105,0,0,330,331,5,110,0,0,331,332,5,
        116,0,0,332,70,1,0,0,0,333,334,5,98,0,0,334,335,5,111,0,0,335,336,
        5,111,0,0,336,337,5,108,0,0,337,72,1,0,0,0,338,339,5,97,0,0,339,
        340,5,115,0,0,340,341,5,115,0,0,341,342,5,101,0,0,342,343,5,114,
        0,0,343,344,5,116,0,0,344,345,5,105,0,0,345,346,5,111,0,0,346,347,
        5,110,0,0,347,74,1,0,0,0,348,349,5,115,0,0,349,350,5,112,0,0,350,
        351,5,101,0,0,351,352,5,99,0,0,352,353,5,105,0,0,353,354,5,102,0,
        0,354,355,5,105,0,0,355,356,5,99,0,0,356,357,5,97,0,0,357,358,5,
        116,0,0,358,359,5,105,0,0,359,360,5,111,0,0,360,361,5,110,0,0,361,
        76,1,0,0,0,362,363,5,102,0,0,363,364,5,114,0,0,364,365,5,111,0,0,
        365,366,5,109,0,0,366,78,1,0,0,0,367,368,5,110,0,0,368,369,5,111,
        0,0,369,372,5,116,0,0,370,372,5,33,0,0,371,367,1,0,0,0,371,370,1,
        0,0,0,372,80,1,0,0,0,373,374,5,111,0,0,374,377,5,114,0,0,375,377,
        5,124,0,0,376,373,1,0,0,0,376,375,1,0,0,0,377,82,1,0,0,0,378,379,
        5,97,0,0,379,380,5,110,0,0,380,383,5,100,0,0,381,383,5,38,0,0,382,
        378,1,0,0,0,382,381,1,0,0,0,383,84,1,0,0,0,384,385,5,105,0,0,385,
        386,5,102,0,0,386,391,5,102,0,0,387,388,5,60,0,0,388,389,5,45,0,
        0,389,391,5,62,0,0,390,384,1,0,0,0,390,387,1,0,0,0,391,86,1,0,0,
        0,392,393,5,105,0,0,393,394,5,109,0,0,394,395,5,112,0,0,395,396,
        5,108,0,0,396,397,5,105,0,0,397,398,5,101,0,0,398,402,5,115,0,0,
        399,400,5,45,0,0,400,402,5,62,0,0,401,392,1,0,0,0,401,399,1,0,0,
        0,402,88,1,0,0,0,403,404,5,120,0,0,404,405,5,111,0,0,405,406,5,114,
        0,0,406,90,1,0,0,0,407,408,5,114,0,0,408,409,5,105,0,0,409,410,5,
        115,0,0,410,411,5,101,0,0,411,92,1,0,0,0,412,413,5,102,0,0,413,414,
        5,97,0,0,414,415,5,108,0,0,415,416,5,108,0,0,416,94,1,0,0,0,417,
        418,5,97,0,0,418,419,5,108,0,0,419,420,5,119,0,0,420,421,5,97,0,
        0,421,422,5,121,0,0,422,425,5,115,0,0,423,425,5,71,0,0,424,417,1,
        0,0,0,424,423,1,0,0,0,425,96,1,0,0,0,426,427,5,101,0,0,427,428,5,
        118,0,0,428,429,5,101,0,0,429,430,5,110,0,0,430,431,5,116,0,0,431,
        432,5,117,0,0,432,433,5,97,0,0,433,434,5,108,0,0,434,435,5,108,0,
        0,435,438,5,121,0,0,436,438,5,70,0,0,437,426,1,0,0,0,437,436,1,0,
        0,0,438,98,1,0,0,0,439,440,5,117,0,0,440,441,5,110,0,0,441,442,5,
        116,0,0,442,443,5,105,0,0,443,446,5,108,0,0,444,446,5,85,0,0,445,
        439,1,0,0,0,445,444,1,0,0,0,446,100,1,0,0,0,447,448,5,117,0,0,448,
        449,5,110,0,0,449,450,5,108,0,0,450,451,5,101,0,0,451,452,5,115,
        0,0,452,455,5,115,0,0,453,455,5,87,0,0,454,447,1,0,0,0,454,453,1,
        0,0,0,455,102,1,0,0,0,456,457,5,104,0,0,457,458,5,105,0,0,458,459,
        5,115,0,0,459,460,5,116,0,0,460,461,5,111,0,0,461,462,5,114,0,0,
        462,463,5,105,0,0,463,464,5,99,0,0,464,465,5,97,0,0,465,466,5,108,
        0,0,466,467,5,108,0,0,467,470,5,121,0,0,468,470,5,72,0,0,469,456,
        1,0,0,0,469,468,1,0,0,0,470,104,1,0,0,0,471,472,5,111,0,0,472,473,
        5,110,0,0,473,474,5,99,0,0,474,477,5,101,0,0,475,477,5,79,0,0,476,
        471,1,0,0,0,476,475,1,0,0,0,477,106,1,0,0,0,478,479,5,115,0,0,479,
        480,5,105,0,0,480,481,5,110,0,0,481,482,5,99,0,0,482,485,5,101,0,
        0,483,485,5,83,0,0,484,478,1,0,0,0,484,483,1,0,0,0,485,108,1,0,0,
        0,486,487,5,110,0,0,487,488,5,101,0,0,488,489,5,120,0,0,489,492,
        5,116,0,0,490,492,5,88,0,0,491,486,1,0,0,0,491,490,1,0,0,0,492,110,
        1,0,0,0,493,494,5,112,0,0,494,495,5,114,0,0,495,496,5,101,0,0,496,
        499,5,118,0,0,497,499,5,89,0,0,498,493,1,0,0,0,498,497,1,0,0,0,499,
        112,1,0,0,0,500,501,5,115,0,0,501,502,5,95,0,0,502,503,5,110,0,0,
        503,504,5,101,0,0,504,505,5,120,0,0,505,509,5,116,0,0,506,507,5,
        115,0,0,507,509,5,88,0,0,508,500,1,0,0,0,508,506,1,0,0,0,509,114,
        1,0,0,0,510,511,5,115,0,0,511,512,5,95,0,0,512,513,5,112,0,0,513,
        514,5,114,0,0,514,515,5,101,0,0,515,519,5,118,0,0,516,517,5,115,
        0,0,517,519,5,89,0,0,518,510,1,0,0,0,518,516,1,0,0,0,519,116,1,0,
        0,0,520,521,5,61,0,0,521,522,5,61,0,0,522,118,1,0,0,0,523,524,5,
        33,0,0,524,525,5,61,0,0,525,526,5,61,0,0,526,120,1,0,0,0,527,528,
        5,62,0,0,528,529,5,61,0,0,529,122,1,0,0,0,530,531,5,60,0,0,531,532,
        5,61,0,0,532,124,1,0,0,0,533,534,5,62,0,0,534,126,1,0,0,0,535,536,
        5,60,0,0,536,128,1,0,0,0,537,538,5,61,0,0,538,130,1,0,0,0,539,542,
        3,133,66,0,540,542,3,135,67,0,541,539,1,0,0,0,541,540,1,0,0,0,542,
        132,1,0,0,0,543,544,5,116,0,0,544,545,5,114,0,0,545,546,5,117,0,
        0,546,552,5,101,0,0,547,548,5,84,0,0,548,549,5,82,0,0,549,550,5,
        85,0,0,550,552,5,69,0,0,551,543,1,0,0,0,551,547,1,0,0,0,552,134,
        1,0,0,0,553,554,5,102,0,0,554,555,5,97,0,0,555,556,5,108,0,0,556,
        557,5,115,0,0,557,564,5,101,0,0,558,559,5,70,0,0,559,560,5,65,0,
        0,560,561,5,76,0,0,561,562,5,83,0,0,562,564,5,69,0,0,563,553,1,0,
        0,0,563,558,1,0,0,0,564,136,1,0,0,0,565,569,3,139,69,0,566,569,3,
        153,76,0,567,569,3,163,81,0,568,565,1,0,0,0,568,566,1,0,0,0,568,
        567,1,0,0,0,569,138,1,0,0,0,570,581,5,48,0,0,571,578,3,145,72,0,
        572,574,3,141,70,0,573,572,1,0,0,0,573,574,1,0,0,0,574,579,1,0,0,
        0,575,576,3,151,75,0,576,577,3,141,70,0,577,579,1,0,0,0,578,573,
        1,0,0,0,578,575,1,0,0,0,579,581,1,0,0,0,580,570,1,0,0,0,580,571,
        1,0,0,0,581,140,1,0,0,0,582,587,3,143,71,0,583,585,3,147,73,0,584,
        583,1,0,0,0,584,585,1,0,0,0,585,586,1,0,0,0,586,588,3,143,71,0,587,
        584,1,0,0,0,587,588,1,0,0,0,588,142,1,0,0,0,589,592,5,48,0,0,590,
        592,3,145,72,0,591,589,1,0,0,0,591,590,1,0,0,0,592,144,1,0,0,0,593,
        594,7,0,0,0,594,146,1,0,0,0,595,597,3,149,74,0,596,595,1,0,0,0,597,
        598,1,0,0,0,598,596,1,0,0,0,598,599,1,0,0,0,599,148,1,0,0,0,600,
        603,3,143,71,0,601,603,5,95,0,0,602,600,1,0,0,0,602,601,1,0,0,0,
        603,150,1,0,0,0,604,606,5,95,0,0,605,604,1,0,0,0,606,607,1,0,0,0,
        607,605,1,0,0,0,607,608,1,0,0,0,608,152,1,0,0,0,609,610,5,48,0,0,
        610,611,7,1,0,0,611,612,3,155,77,0,612,154,1,0,0,0,613,618,3,157,
        78,0,614,616,3,159,79,0,615,614,1,0,0,0,615,616,1,0,0,0,616,617,
        1,0,0,0,617,619,3,157,78,0,618,615,1,0,0,0,618,619,1,0,0,0,619,156,
        1,0,0,0,620,621,7,2,0,0,621,158,1,0,0,0,622,624,3,161,80,0,623,622,
        1,0,0,0,624,625,1,0,0,0,625,623,1,0,0,0,625,626,1,0,0,0,626,160,
        1,0,0,0,627,630,3,157,78,0,628,630,5,95,0,0,629,627,1,0,0,0,629,
        628,1,0,0,0,630,162,1,0,0,0,631,632,5,48,0,0,632,633,7,3,0,0,633,
        634,3,165,82,0,634,164,1,0,0,0,635,640,3,167,83,0,636,638,3,169,
        84,0,637,636,1,0,0,0,637,638,1,0,0,0,638,639,1,0,0,0,639,641,3,167,
        83,0,640,637,1,0,0,0,640,641,1,0,0,0,641,166,1,0,0,0,642,643,7,4,
        0,0,643,168,1,0,0,0,644,646,3,171,85,0,645,644,1,0,0,0,646,647,1,
        0,0,0,647,645,1,0,0,0,647,648,1,0,0,0,648,170,1,0,0,0,649,652,3,
        167,83,0,650,652,5,95,0,0,651,649,1,0,0,0,651,650,1,0,0,0,652,172,
        1,0,0,0,653,654,3,175,87,0,654,174,1,0,0,0,655,656,3,141,70,0,656,
        658,5,46,0,0,657,659,3,141,70,0,658,657,1,0,0,0,658,659,1,0,0,0,
        659,661,1,0,0,0,660,662,3,177,88,0,661,660,1,0,0,0,661,662,1,0,0,
        0,662,672,1,0,0,0,663,664,5,46,0,0,664,666,3,141,70,0,665,667,3,
        177,88,0,666,665,1,0,0,0,666,667,1,0,0,0,667,672,1,0,0,0,668,669,
        3,141,70,0,669,670,3,177,88,0,670,672,1,0,0,0,671,655,1,0,0,0,671,
        663,1,0,0,0,671,668,1,0,0,0,672,176,1,0,0,0,673,674,3,179,89,0,674,
        675,3,181,90,0,675,178,1,0,0,0,676,677,7,5,0,0,677,180,1,0,0,0,678,
        680,3,183,91,0,679,678,1,0,0,0,679,680,1,0,0,0,680,682,1,0,0,0,681,
        683,3,143,71,0,682,681,1,0,0,0,683,684,1,0,0,0,684,682,1,0,0,0,684,
        685,1,0,0,0,685,182,1,0,0,0,686,687,7,6,0,0,687,184,1,0,0,0,688,
        692,3,187,93,0,689,691,3,189,94,0,690,689,1,0,0,0,691,694,1,0,0,
        0,692,690,1,0,0,0,692,693,1,0,0,0,693,186,1,0,0,0,694,692,1,0,0,
        0,695,698,3,191,95,0,696,698,5,36,0,0,697,695,1,0,0,0,697,696,1,
        0,0,0,698,188,1,0,0,0,699,703,3,187,93,0,700,703,3,143,71,0,701,
        703,2,46,47,0,702,699,1,0,0,0,702,700,1,0,0,0,702,701,1,0,0,0,703,
        190,1,0,0,0,704,707,3,193,96,0,705,707,5,95,0,0,706,704,1,0,0,0,
        706,705,1,0,0,0,707,192,1,0,0,0,708,709,7,7,0,0,709,194,1,0,0,0,
        710,711,7,8,0,0,711,712,1,0,0,0,712,713,6,97,0,0,713,196,1,0,0,0,
        714,716,7,9,0,0,715,714,1,0,0,0,716,717,1,0,0,0,717,715,1,0,0,0,
        717,718,1,0,0,0,718,719,1,0,0,0,719,720,6,98,0,0,720,198,1,0,0,0,
        721,722,5,47,0,0,722,723,5,42,0,0,723,727,1,0,0,0,724,726,9,0,0,
        0,725,724,1,0,0,0,726,729,1,0,0,0,727,728,1,0,0,0,727,725,1,0,0,
        0,728,730,1,0,0,0,729,727,1,0,0,0,730,731,5,42,0,0,731,732,5,47,
        0,0,732,733,1,0,0,0,733,734,6,99,0,0,734,200,1,0,0,0,735,736,5,47,
        0,0,736,737,5,47,0,0,737,741,1,0,0,0,738,740,8,10,0,0,739,738,1,
        0,0,0,740,743,1,0,0,0,741,739,1,0,0,0,741,742,1,0,0,0,742,744,1,
        0,0,0,743,741,1,0,0,0,744,745,6,100,0,0,745,202,1,0,0,0,51,0,371,
        376,382,390,401,424,437,445,454,469,476,484,491,498,508,518,541,
        551,563,568,573,578,580,584,587,591,598,602,607,615,618,625,629,
        637,640,647,651,658,661,666,671,679,684,692,697,702,706,717,727,
        741,1,6,0,0
    ]

class StlLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    MINUS = 1
    PLUS = 2
    TIMES = 3
    DIVIDE = 4
    LPAREN = 5
    RPAREN = 6
    LBRACE = 7
    RBRACE = 8
    LBRACK = 9
    RBRACK = 10
    SEMICOLON = 11
    COLON = 12
    COMMA = 13
    DOT = 14
    AT = 15
    ABS = 16
    SQRT = 17
    EXP = 18
    POW = 19
    SEC = 20
    MSEC = 21
    USEC = 22
    NSEC = 23
    PSEC = 24
    ROS_Topic = 25
    Import = 26
    Input = 27
    Output = 28
    Internal = 29
    Constant = 30
    DomainTypeReal = 31
    DomainTypeFloat = 32
    DomainTypeLong = 33
    DomainTypeComplex = 34
    DomainTypeInt = 35
    DomainTypeBool = 36
    Assertion = 37
    Specification = 38
    From = 39
    NotOperator = 40
    OrOperator = 41
    AndOperator = 42
    IffOperator = 43
    ImpliesOperator = 44
    XorOperator = 45
    RiseOperator = 46
    FallOperator = 47
    AlwaysOperator = 48
    EventuallyOperator = 49
    UntilOperator = 50
    UnlessOperator = 51
    HistoricallyOperator = 52
    OnceOperator = 53
    SinceOperator = 54
    NextOperator = 55
    PreviousOperator = 56
    StrongNextOperator = 57
    StrongPreviousOperator = 58
    EqualOperator = 59
    NotEqualOperator = 60
    GreaterOrEqualOperator = 61
    LesserOrEqualOperator = 62
    GreaterOperator = 63
    LesserOperator = 64
    EQUAL = 65
    BooleanLiteral = 66
    TRUE = 67
    FALSE = 68
    IntegerLiteral = 69
    RealLiteral = 70
    Identifier = 71
    LINE_TERMINATOR = 72
    WHITESPACE = 73
    COMMENT = 74
    LINE_COMMENT = 75

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'-'", "'+'", "'*'", "'/'", "'('", "')'", "'{'", "'}'", "'['", 
            "']'", "';'", "':'", "','", "'.'", "'@'", "'abs'", "'sqrt'", 
            "'exp'", "'pow'", "'s'", "'ms'", "'us'", "'ns'", "'ps'", "'topic'", 
            "'import'", "'input'", "'output'", "'internal'", "'const'", 
            "'real'", "'float'", "'long'", "'complex'", "'int'", "'bool'", 
            "'assertion'", "'specification'", "'from'", "'xor'", "'rise'", 
            "'fall'", "'=='", "'!=='", "'>='", "'<='", "'>'", "'<'", "'='" ]

    symbolicNames = [ "<INVALID>",
            "MINUS", "PLUS", "TIMES", "DIVIDE", "LPAREN", "RPAREN", "LBRACE", 
            "RBRACE", "LBRACK", "RBRACK", "SEMICOLON", "COLON", "COMMA", 
            "DOT", "AT", "ABS", "SQRT", "EXP", "POW", "SEC", "MSEC", "USEC", 
            "NSEC", "PSEC", "ROS_Topic", "Import", "Input", "Output", "Internal", 
            "Constant", "DomainTypeReal", "DomainTypeFloat", "DomainTypeLong", 
            "DomainTypeComplex", "DomainTypeInt", "DomainTypeBool", "Assertion", 
            "Specification", "From", "NotOperator", "OrOperator", "AndOperator", 
            "IffOperator", "ImpliesOperator", "XorOperator", "RiseOperator", 
            "FallOperator", "AlwaysOperator", "EventuallyOperator", "UntilOperator", 
            "UnlessOperator", "HistoricallyOperator", "OnceOperator", "SinceOperator", 
            "NextOperator", "PreviousOperator", "StrongNextOperator", "StrongPreviousOperator", 
            "EqualOperator", "NotEqualOperator", "GreaterOrEqualOperator", 
            "LesserOrEqualOperator", "GreaterOperator", "LesserOperator", 
            "EQUAL", "BooleanLiteral", "TRUE", "FALSE", "IntegerLiteral", 
            "RealLiteral", "Identifier", "LINE_TERMINATOR", "WHITESPACE", 
            "COMMENT", "LINE_COMMENT" ]

    ruleNames = [ "MINUS", "PLUS", "TIMES", "DIVIDE", "LPAREN", "RPAREN", 
                  "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMICOLON", "COLON", 
                  "COMMA", "DOT", "AT", "ABS", "SQRT", "EXP", "POW", "SEC", 
                  "MSEC", "USEC", "NSEC", "PSEC", "ROS_Topic", "Import", 
                  "Input", "Output", "Internal", "Constant", "DomainTypeReal", 
                  "DomainTypeFloat", "DomainTypeLong", "DomainTypeComplex", 
                  "DomainTypeInt", "DomainTypeBool", "Assertion", "Specification", 
                  "From", "NotOperator", "OrOperator", "AndOperator", "IffOperator", 
                  "ImpliesOperator", "XorOperator", "RiseOperator", "FallOperator", 
                  "AlwaysOperator", "EventuallyOperator", "UntilOperator", 
                  "UnlessOperator", "HistoricallyOperator", "OnceOperator", 
                  "SinceOperator", "NextOperator", "PreviousOperator", "StrongNextOperator", 
                  "StrongPreviousOperator", "EqualOperator", "NotEqualOperator", 
                  "GreaterOrEqualOperator", "LesserOrEqualOperator", "GreaterOperator", 
                  "LesserOperator", "EQUAL", "BooleanLiteral", "TRUE", "FALSE", 
                  "IntegerLiteral", "DecimalNumeral", "Digits", "Digit", 
                  "NonZeroDigit", "DigitsAndUnderscores", "DigitOrUnderscore", 
                  "Underscores", "HexNumeral", "HexDigits", "HexDigit", 
                  "HexDigitsAndUnderscores", "HexDigitOrUnderscore", "BinaryNumeral", 
                  "BinaryDigits", "BinaryDigit", "BinaryDigitsAndUnderscores", 
                  "BinaryDigitOrUnderscore", "RealLiteral", "DecimalRealLiteral", 
                  "ExponentPart", "ExponentIndicator", "SignedInteger", 
                  "Sign", "Identifier", "IdentifierStart", "IdentifierPart", 
                  "LetterOrUnderscore", "Letter", "LINE_TERMINATOR", "WHITESPACE", 
                  "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "StlLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


